version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: violations_db
    environment:
      POSTGRES_DB: violations_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d violations_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Your existing services (update them to depend on postgres)
  detection_service:
    build: ./detection_service
    container_name: detection_service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/violations_db
    volumes:
      - ./violations:/app/violations
      - ./shared:/app/shared
    networks:
      - app_network

  frame_reader:
    build: ./frame_reader
    container_name: frame_reader
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/violations_db
    volumes:
      - ./video:/app/video
      - ./violations:/app/violations
      - ./shared:/app/shared
    networks:
      - app_network

  streaming_service:
    build: ./streaming_service
    container_name: streaming_service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/violations_db
    volumes:
      - ./violations:/app/violations
      - ./shared:/app/shared
    ports:
      - "8001:8001"
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
